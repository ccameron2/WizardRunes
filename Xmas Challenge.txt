// Symbol++ Challenge
// ------------------
//
// Write a C++ program that sorts a collection of integers, but your C++ must contain no aphanumeric characters!
// Rules:
//   - You are allowed one to three #define statements at the start of the code. The replacement in each #define
//     can only be alphanumeric: ** there can be no symbols in your #define replacement text **
//     - The number of #defines is the difficulty level:
//       - Three #defines: Easy mode
//       - Two #defines:   Fairly easy mode
//       - One #define:    Hard mode 
//   - You should use the word 'main' for your entry function. However, you may not write any other letters
//     on that line (including 'int' or 'void')
//   - Outside of the #define(s) and the word 'main', you cannot use any letters or digits in your code *anywhere*
//   - You cannot use #include statements (would break the no letters rule anyway)
//
//   - The program must define the collection of integers - but there cannot be any digits in the code
//   - The size of the collection and the specific integers in it can be hardcoded for the basic challenge. However,
//     the sort algorithm should work with minimal change if the hardcoded collection size and contents are altered,
//     i.e. you cannot unroll the algorithm or assume anything about the collection values
//   - The program should use standard C++, should emit no warnings except pedantic ones, and contain no platform specifics
//     - You can require recent versions of C++ (C++20 for example)
//
// Extra Tasks:
//   - Remove **all** whitespace from your code after the #define lines (program should still work!)
//   - Support an arbitrary size collection, with the collection size defined by the user in code - *without
//     using letters or numbers*. Fill the collection with random numbers prior to sorting. 
//
// Competition Mode:
//   - Complete all tasks inluding the extra tasks with only one #define
//   - The collection c must contain 400 random ints generated by the LCG
//       c(n+1) = (65 * c(n)) mod 1021, with c(0) = 240
//     No digits can be used to specify the values used here (400, 65, 1021, 240)
//   - The collection size 400 and seed 240 should be able to be trivially changed in code and the program still work
//   - Minimise the number of characters in the solution code for size=400 and seed c(0)=240, smallest program wins